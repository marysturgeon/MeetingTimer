@page "/"
@inject NavigationManager UriHelper
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject IJSRuntime JSRuntime

<h1>Timer Setup</h1>

<table class="table">
    <tr>
        <td class="shrink">Number of Attendees</td>
        <td><input @bind="attend" /></td>
        <td></td>
    </tr>
    <tr>
        <td class="shrink">Meetings Per Week</td>
        <td><input @bind="meetings" /></td>
        <td></td>
    </tr>
    <tr>
        <td class="shrink">Average Hourly Opportunity Cost</td>
        <td><input @bind="cost" /></td>
        <td></td>
    </tr>

</table>

@code
{
    private double attend {get; set; }
    private int meetings {get; set; }
    private double cost {get; set; }

    private double Total {get; set; }
    public async Task LoadData()
    {
        attend = await sessionStorage.GetItemAsync<double>("attend");
        cost = await sessionStorage.GetItemAsync<double>("cost");
        meetings = await sessionStorage.GetItemAsync<int>("meetings");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("setTitle", "Arcade Meeting Timer");
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("setTitle", "Arcade Meeting Timer");
            await LoadData();
            StateHasChanged();
        }
    }
    void GoTiem()
    {
        sessionStorage.SetItemAsync("attend", attend);
        sessionStorage.SetItemAsync("cost", cost);
        sessionStorage.SetItemAsync("meetings", meetings);
        UriHelper.NavigateTo("timeroutput");
    }
}

<button class="btn btn-primary" @onclick="@GoTiem">Go</button>
